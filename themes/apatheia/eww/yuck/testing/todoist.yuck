(defpoll todos 
  :interval "10s"
  `todoist-cli sync;todoist-cli --indent list --filter 'today|overdue'|cut -d' ' -f7-`)
(defpoll time 
  :interval "5s"
  :initial `date +'{"hour":"%H","min":"%M"}'`
  `date +'{"hour":"%H","min":"%M"}'`)

(defvar todos_reveal false)

(defwindow todowindow
  :monitor 0
  ; :orientation "h"
  :exclusive false
  :stackings "fg"
  :geometry (geometry
              :width "15%"
              :height "5%"
              :anchor "top right")
  (todowidget))

(defwidget todowidget []
  (box
    :class "bar_class"
    :space-evenly false
  (eventbox
      :onhover "${EWW_CMD} update todos_reveal=true"
      :onhoverlost "${EWW_CMD} update todos_reveal=false"
    (box
      :class "revealer"
      :space-evenly false
      :orientation "v"
    (box
      :orientation "h"
    (image
      :class "todo-image"
      :path "assets/weird.gif")
    (label
      :text "You still have 5 todos!󰁊")
    )
      (revealer
        :class "revealer"
        :transition "slidedown"
        :reveal todos_reveal
        :duration "450ms"
        (label
          :text "${ todos }"))))))

      ; todo : checkbox
      ; (label
      ;        :text "x"
      ;        :limit-width 20
; )

; expander revealer 
; checkbox scale(slider) scroll(single child that can scroll)

(defwidget Testing_sundial []
  (label :class "sundial-lbl" :halign "end" :hexpand true
         :text {time.hour >= 2 && time.hour <= 4 ? "Early Morning" :
               time.hour <= 5 ? "Dawn" :
               time.hour >= 6 &&
                (time.hour <= 8 &&
                  time.min <= 59) ? "Morning" :
               time.hour >= 9 &&
                (time.hour <= 11 && time.min <= 59)
                ? "Late Morning" :
               time.hour == 12 && time.min <= 29 ? "Midday" :
               time.hour >= 12 && time.hour <= 16 ? "Afternoon" :
               time.hour > 16 && time.hour <= 17 ?
                "Late Afternoon" :
               (time.hour >= 17 && time.min <= 1)
                || (time.hour <= 18 && time.min <= 20) ?
                  "Early Evening" :
               time.hour >= 18 && time.hour <= 19 ? "Dusk" :
               time.hour > 19 && time.hour <= 21 ? "Late Evening" :
               time.hour > 21 ? "Night" : "Midnight"}))
